<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARoSURBVEhLpZR7UJRVGMbPfrvLLUHkIpfkEgENkDMQTJlOFDNg6YyNNJCBkxNlhGFj4TBT6uoC
        SZZiKOQMlwUrI2w0xoDJmApQ2bgq9/tycWFlA2TlJrjsPr3fujKVMMX4xzNn95zz/t7nvO85H/syiltN
        2n8qWqhM3ymaOhXNHQXAHlUsPZr77PzHT881FsahuSAGOXG205RoxyODM940HWu5sBfyY15oOBOMuvwo
        kGsVwcWPAmc8pIncVh/3Q6XEGu0/vIPCRK8ZAu/NPcy2nU0xkWfFshUn4cGp5xI8ZtsvxqM+cxOqT6xH
        Y8HbOBPP3f0m1XI2P9lkPlvKvFfqnpEzAQ/PetfmbuN3MbiRtw0/pXuh8KQ9JockuJzvO5lziEWsGPwg
        gBJEZOwymS04aoOSbBeMK2Ixo0xAVYQ3isWChRKOy1gJfPFa5UmZR+4Rdqvsayf9cMsrGKoIRLnfGlTZ
        W0Ph4oJLIoE2W8J2kf5XvQ3gXAnbJJMyjbzIc0HZFIK2PA9cthajyXEtBt3dUWomROX7PvxJpmVJAhXB
        /7M0BjC5LZUlibUXM+zu/BxnpS01F0Lh6oo2J0cUW4jQfNoH6o4wqvknUDbH4MdMp5n8ZK6WEnguV57F
        UuRI2bqcwyys2Iyb6HJ2htx2NYodzNBaaIo+uQWGG+zwZ4sbJvvDMatORk9NlJ5uzXTuEcFBSiD6d4KH
        ni41SXJJLND9HvqkvrNMhO4rwkXwaKsrJjq9MN0bgPlbuzGtSsXVotDZsymmfHneI5k+SLDkN4Gcz6s6
        49FzzcoINjc4Hm11g6YrAJpOX8wPBmFBFYqF8UTcHpCi/PxzMzIpp6ELIKEEZkuCZUlM0Vv/BvpqPQ1g
        RZUZhhpsDeDJHh9M92+Gpn09tMpg6FQh0I2EQzueDHX3R8iRcnPLgilrWnXxRt1Q8xYCc+iqEEFZu4bA
        3pjo8Mb8zU2YGYjAaJM/tMMvE3g7dJqTqCraOEdNlfHlWNIxZdz47ecWU+qefei5aoHOcg6Ka5bUPC+M
        tQVC0+EHnfp1TPVHY7h+A+6Np6GtMlKbnyzspljzJcGMMY70WPZhVt9cvkU/eOP5+67LLaCssccdxWaM
        XPfFVFcgdLcPYbwnEVUX/O/JkkStaQnM4aHmGYFWNDqRPHduZVHnvrC5O9L9ARR/OKK/xh1dv1litMWT
        nvpbGJA/C83AQZTk+sxlHhBfWefA/IyxPENgKIXhB2OWxgVvGp8hvXhiP6srL3xKO9IdS/DHcbPOH71X
        PDGnToKqKRqFx1fNS/cIizgBe8kYw8fyxlYt1tjw5/6kFymAFEwuIr86wNQNv4ToVe07MNb3IRTyMFR+
        776QJeEmt4ewT2nfVn6vMYaP5RnifzSPJsxIDqQnSPzRgoJ82WtZEsGd1qvh+utlG/R5KcK5Y/sEvzrZ
        sVdp/QV+j3EvH2NNEi57K2iRbyCfhN+4dnc4C6NuT5H7ij2RLJLm3EjOJDvjScU0Cv7+rP8CVHBtoUtn
        EIEAAAAASUVORK5CYII=
</value>
  </data>
</root>